(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{609:function(t,n,v){"use strict";v.r(n);var e=v(13),o=Object(e.a)({},(function(){var t=this,n=t.$createElement,v=t._self._c||n;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("strong",[t._v("DevOps强调的是研发自运维, 落地的核心是CI/CD")])]),t._v(" "),v("p",[t._v("CI意为持续集成. Continuous Integration.")]),t._v(" "),v("p",[t._v("持续集成即在我们提交代码之后自动拉取代码, 自动构建, 自动单元测试. 他的目的是确保最新提交的更改是没有问题的, 能够集成到代码主线当中去.")]),t._v(" "),v("p",[t._v("CD可以理解为两部分: 持续交付Continuous Delivery和持续部署Continuous Deployment. 执行CD的前提为CI完成.")]),t._v(" "),v("ul",[v("li",[t._v("持续交付")])]),t._v(" "),v("p",[t._v("在完成CI之后, 持续交付自动将已经验证通过的代码发布到代码仓库中. 持续交付的目标是拥有一个可以随时部署到生产环境的代码仓库或者分支.")]),t._v(" "),v("ul",[v("li",[t._v("持续部署")])]),t._v(" "),v("p",[t._v("CI/CD的最终阶段为持续部署. 他作为持续交付的延伸, 持续部署可以自动将应用发布到生产环境.")]),t._v(" "),v("p",[t._v("他与持续交付的区别是, 持续交付不是指每一个改动都要立刻部署到生产环境中, 而是指任何的代码修改都可以在任何时候实施部署.")]),t._v(" "),v("p",[t._v("持续交付是一种能力, 而持续部署则是一种方式.")]),t._v(" "),v("ul",[v("li",[v("RouterLink",{attrs:{to:"/devops/gitlab-ci.html"}},[t._v("Gitlab-CI入门")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/devops/jenkins-1.html"}},[t._v("Jenkins部署")])],1)])])}),[],!1,null,null,null);n.default=o.exports}}]);